"use strict";var S=Object.defineProperty;var b=(r,t,e)=>t in r?S(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var p=(r,t,e)=>(b(r,typeof t!="symbol"?t+"":t,e),e);var m=(r,t,e)=>new Promise((i,s)=>{var a=n=>{try{d(e.next(n))}catch(o){s(o)}},c=n=>{try{d(e.throw(n))}catch(o){s(o)}},d=n=>n.done?i(n.value):Promise.resolve(n.value).then(a,c);d((e=e.apply(r,t)).next())});Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});var g=(r=>(r.person="person",r))(g||{}),l=(r=>(r.de="de",r.fr="fr",r.en="en",r.it="it",r.nl="nl",r))(l||{});class f{constructor(t,e,i){p(this,"projectSlug");p(this,"entity","person");p(this,"apiUrl","https://api.metagrid.ch");this.projectSlug=t,this.entity=e,typeof i!="undefined"&&(this.apiUrl=i)}fetch(t,e="de",i=!1){return m(this,null,function*(){const s=[];s.push(`include=${String(i)}`),s.push(`language=${e}`);try{const a=yield fetch(`${this.apiUrl}/widget/${this.projectSlug}/${this.entity}/${t}.json?${s.join("&")}`);return a.ok?this.buildResponse(a,this.transform(yield a.json())):this.buildResponse(a)}catch(a){return this.buildResponse({statusCode:0,found:!1,error:"unknown network error"})}})}buildResponse(t,e=[]){return"ok"in t?{status:{statusCode:t.status,found:t.status===200,error:t.statusText},data:e}:{status:t,data:[]}}transform(t){return Object.keys(t[0]).map(e=>{const i=t[0][e];return typeof i=="string"?{provider:e,url:i}:{provider:e,url:i.url,shortDescription:i.short_description,longDescription:i.long_description}})}static create(t,e="person"){return new f(t,e)}}function v(r,t,e,i="de",s=!1){return m(this,null,function*(){const c=yield f.create(t).fetch(e,i,s);if(c.status.found){const d=document.createElement("ul");d.classList.add("metagrid-list"),c.data.forEach(n=>{const o=n,h=document.createElement("li");h.classList.add("metagrid-item");const u=document.createElement("a");u.classList.add("metagrid-link"),u.href=o.url,u.innerText=o.provider,u.target="_blank",typeof o.longDescription!="undefined"&&(u.title=o.longDescription),h.append(u),d.append(h)}),r.append(d),r.append(w(i))}else console.info(`Metagrid didn't find a concordance. Statuscode: ${c.status.statusCode}, error: ${c.status.error}`)})}function w(r){const t=document.createElement("div");t.classList.add("metagrid-credit");let e="the networking initiative of the SAHS";switch(r){case l.de:e="die Vernetzungsinitiative der SAGW";break;case l.fr:e="l\u2019initiative de mise en r\xE9seau de l\u2019ASSH";break;case l.it:e="l\u2019iniziativa di messa in rete dell\u2019ASSU";break}return t.innerHTML=`Links powered by <a href="https://www.metagrid.ch" target="_blank">Metagrid</a> \u2013 ${e}`,t}exports.MetagridApi=f;exports.MetagridEntities=g;exports.MetagridLanguages=l;exports.credit=w;exports.widget=v;
//# sourceMappingURL=index.cjs.js.map
